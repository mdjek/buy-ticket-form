{"version":3,"sources":["components/BuyProgress/BuyProgress.module.scss","components/BuyProgress/BuyProgress.js","components/formControls/InputForm.tsx","components/formControls/SelectForm.tsx","components/formControls/DatePickerForm.tsx","components/formControls/CheckboxForm.tsx","components/BuyTicketForm/BuyTicketFormStep.js","components/BuyTicketForm/BuyTicketForm.js","App.js","serviceWorker.js","index.js","components/BuyTicketForm/BuyTicketFormStep.module.scss","components/BuyTicketForm/BuyTicketForm.module.scss"],"names":["module","exports","BuyProgress","stepData","step","stepsCount","finished","className","styles","line","style","width","progress","text","InputForm","error","type","props","defaultProps","SelectForm","name","children","handleChange","value","undefined","onChange","e","DatePickerForm","date","currentDateValue","moment","format","CheckboxForm","checked","label","target","propTypes","PropTypes","shape","setStepData","formikProps","BuyTicketFormStep","errors","handleBlur","touched","setFieldValue","values","Option","Select","useState","data","sessions","performanceData","setPerformanceData","useEffect","setTimeout","performances","localStorage","setItem","JSON","stringify","gutter","xs","sm","placeholder","first_name","onBlur","last_name","email","birthday","maxWidth","payment","get","acceptRules","mask","size","card","number","replace","valid_thru","maskChar","formatChars","A","toUpperCase","performance","map","item","key","id","title","attributes","genres","elem","index","length","onClick","performanceTitle","load","padding","disabled","session","filter","relationships","from","renderStep","btnStepText","BuyTicketForm","initialValues","defaultStepData","localStepData","parse","getItem","getInitialStepData","isInitialValid","setInitialValid","schemaArray","Yup","required","nullable","oneOf","matches","buyTicketFormData","isValid","then","valid","enableReinitialize","validationSchema","getLocalInitialValues","initialErrors","onSubmit","setSubmitting","removeItem","valuesForm","console","log","handleSubmit","isSubmitting","validateForm","setTouched","setErrors","submitForm","form","justify","marginTop","prev","locale","App","ruRu","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"iHACAA,EAAOC,QAAU,CAAC,KAAO,0BAA0B,SAAW,8BAA8B,KAAO,4B,k8DC6BpFC,EA1BK,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACbC,EAA+BD,EAA/BC,KAAMC,EAAyBF,EAAzBE,WAAYC,EAAaH,EAAbG,SAE1B,OACE,kBAAC,WAAD,KACE,yBAAKC,UAAWC,IAAOC,MACrB,yBACEC,MAAO,CAAEC,MAAM,GAAD,OAAMP,EAAOC,EAAc,IAA3B,MACdE,UAAWC,IAAOI,aAGpBN,GACA,yBAAKC,UAAWC,IAAOK,MAAvB,6BAAqCT,EAArC,yBAAgDC,GAAhD,O,qECPFS,EAA6B,SAAC,GAAD,IACjCC,EADiC,EACjCA,MACAC,EAFiC,EAEjCA,KACGC,EAH8B,uCAKjC,gBAAC,WAAD,KACE,gBAAC,IAAD,eAAOD,KAAMA,GAAUC,IACtBF,GAAS,wBAAMR,UAAU,SAASQ,KAIvCD,EAAUI,aAAe,CACvBF,KAAM,QAGOF,QCUAK,EAtBqB,SAAC,GAOH,IANhCJ,EAM+B,EAN/BA,MACAK,EAK+B,EAL/BA,KACAC,EAI+B,EAJ/BA,SACAC,EAG+B,EAH/BA,aACAC,EAE+B,EAF/BA,MACGN,EAC4B,kEAC/B,OACE,gBAAC,WAAD,KACE,gBAAC,IAAD,eACEM,MAAOA,QAASC,EAChBC,SAAU,SAACC,GAAD,OAAeJ,EAAaF,EAAMM,KACxCT,GAEHI,GAEFN,GAAS,wBAAMR,UAAU,SAASQ,K,SCO1BY,EAvByB,SAAC,GAAD,IACtCZ,EADsC,EACtCA,MACAK,EAFsC,EAEtCA,KACAE,EAHsC,EAGtCA,aACAC,EAJsC,EAItCA,MACGN,EALmC,8DAOtC,gBAAC,WAAD,KACE,gBAAC,IAAD,eACEM,MAAOA,EACPE,SAAU,SAACG,GACT,IAAMC,EAAyCD,EAC3CE,IAAOF,GAAMG,OAAO,cACpB,KACJT,EAAaF,EAAMS,IAErBnB,MAAO,CAAEC,MAAO,SACZM,IAEN,2BAAMF,GAAS,wBAAMR,UAAU,SAASQ,M,SCE7BiB,EAvBuB,SAAC,GAOL,IANhCC,EAM+B,EAN/BA,QACAb,EAK+B,EAL/BA,KACAc,EAI+B,EAJ/BA,MACAnB,EAG+B,EAH/BA,MACAO,EAE+B,EAF/BA,aACGL,EAC4B,iEAC/B,OACE,gBAAC,WAAD,KACE,gBAAC,IAAD,eACEgB,QAASA,EACTb,KAAMA,GACFH,EAHN,CAIEQ,SAAU,SAACC,GAAD,OAAOJ,EAAaF,EAAMM,EAAES,OAAOF,YAE5CC,GAEH,2BAAMnB,GAAS,wBAAMR,UAAU,SAASQ,M,4lBC4W9CiB,EAAaI,UAAY,CACvBjC,SAAUkC,IAAUC,MAAM,IAC1BC,YAAaF,IAAUC,MAAM,IAC7BE,YAAaH,IAAUC,MAAM,KAGhBG,MA7XW,SAAC,GAA4C,IAA1CtC,EAAyC,EAAzCA,SAAUoC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,YAEhDE,EAMEF,EANFE,OACApB,EAKEkB,EALFlB,aACAqB,EAIEH,EAJFG,WACAC,EAGEJ,EAHFI,QACAC,EAEEL,EAFFK,cACAC,EACEN,EADFM,OAGMC,EAAWC,IAAXD,OAV4D,EAYtBE,mBAAS,CACrDC,KAAM,KACNC,SAAU,OAdwD,mBAY7DC,EAZ6D,KAY5CC,EAZ4C,KAiBpEC,qBAAU,WACRC,YAAW,WACTF,EAAmB,EAAD,GACbD,EADa,CAEhBF,KAAMM,EACNL,gBAED,OAEF,CAA8B,OAA7BC,EAAgBD,WAEpBG,qBAAU,WACRG,aAAaC,QAAQ,oBAAqBC,KAAKC,UAAUd,MACxD,CAACA,IA2UJ,OAAI3C,EAASG,SAET,kBAAC,WAAD,KACE,6BACE,+IADF,wMAjSa,SAACF,GAkBlB,OAAQA,GACN,KAAK,EACH,OACE,kBAAC,WAAD,KACE,6IACA,uBAAGG,UAAU,YAAb,kHACA,kBAAC,IAAD,CAAKsD,OAAQ,IACX,kBAAC,IAAD,CAAKC,GAAI,GAAIC,GAAI,IACf,+BACE,yBAAKxD,UAAU,WAAf,sBACA,kBAAC,EAAD,CACEa,KAAK,aACL4C,YAAY,qBACZzC,MAAOuB,EAAOmB,WACdxC,SAAUH,EACV4C,OAAQvB,EACR5B,MAAO6B,EAAQqB,YAAcvB,EAAOuB,eAI1C,kBAAC,IAAD,CAAKH,GAAI,GAAIC,GAAI,IACf,+BACE,yBAAKxD,UAAU,WAAf,8CACA,kBAAC,EAAD,CACEa,KAAK,YACL4C,YAAY,6CACZzC,MAAOuB,EAAOqB,UACd1C,SAAUH,EACV4C,OAAQvB,EACR5B,MAAO6B,EAAQuB,WAAazB,EAAOyB,eAM3C,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,+BACE,yBAAK5D,UAAU,WAAf,kCACA,kBAAC,EAAD,CACES,KAAK,QACLI,KAAK,QACL4C,YAAY,eACZzC,MAAOuB,EAAOsB,MACd3C,SAAUH,EACV4C,OAAQvB,EACR5B,MAAO6B,EAAQwB,OAAS1B,EAAO0B,WAMvC,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,+BACE,yBAAK7D,UAAU,WAAf,6EACA,kBAAC,EAAD,CACEa,KAAK,WACLG,MACEuB,EAAOuB,UAAYvC,IAAOgB,EAAOuB,SAAU,cAE7C3D,MAAO,CAAE4D,SAAU,SACnBhD,aAAcuB,EACd9B,MAAO6B,EAAQyB,UAAY3B,EAAO2B,cAM1C,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,+BACE,yBAAK9D,UAAU,WAAf,6EACA,kBAAC,IAAD,CACEa,KAAK,eACL4C,YAAY,6HACZzC,MAAQuB,EAAOyB,SAAWzB,EAAOyB,QAAQvD,WAASQ,EAClDC,SA9FgB,SAACF,GAC/BgB,EAAY,EAAD,GACNpC,EADM,CAETE,WAAsB,SAAVkB,EAAmB,EAAI,KAGrCsB,EAAc,eAAgBtB,KA0FhB,kBAACwB,EAAD,CAAQxB,MAAM,QAAd,yFACA,kBAACwB,EAAD,CAAQxB,MAAM,QAAd,gDAEDiD,IAAI9B,EAAQ,iBACX8B,IAAI5B,EAAS,iBACX,0BAAMrC,UAAU,SAASmC,EAAO6B,QAAQvD,SAMlD,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,CACEiB,QAASa,EAAO2B,YAChBrD,KAAK,cACLc,MAAM,iHACNnB,MAAO6B,EAAQ6B,aAAe/B,EAAO+B,YACrCnD,aAAcuB,OAM1B,KAAK,EACH,OACE,kBAAC,WAAD,KACE,mGACA,uBAAGtC,UAAU,YAAb,kHACA,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,+BACE,yBAAKA,UAAU,WAAf,iEACA,kBAAC,IAAD,CACEa,KAAK,sBACLJ,KAAK,OACLT,UAAU,YACVyD,YAAY,uBACZU,KAAK,sBACLC,KAAM,GACNpD,MAAOuB,EAAOyB,QAAQK,KAAKC,OAC3BpD,SA5HW,SAACC,GAC1BmB,EAAc,sBAAuBnB,EAAES,OAAOZ,MAAMuD,QAAQ,MAAO,MA4HrDZ,OAAQvB,KAGZ,6BACG6B,IAAI9B,EAAQ,wBACX8B,IAAI5B,EAAS,wBACX,0BAAMrC,UAAU,SACbmC,EAAO6B,QAAQK,KAAKC,WAOjC,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,+BACE,yBAAKtE,UAAU,WAAf,uEACA,kBAAC,IAAD,CACEa,KAAK,0BACLJ,KAAK,OACLT,UAAU,YACVyD,YAAY,QACZU,KAAK,QACLC,KAAM,EACNpD,MAAOuB,EAAOyB,QAAQK,KAAKG,WAC3BtD,SAAUH,EACV4C,OAAQvB,EACRjC,MAAO,CAAE4D,SAAU,WAErB,6BACGE,IAAI9B,EAAQ,4BACX8B,IAAI5B,EAAS,4BACX,0BAAMrC,UAAU,SACbmC,EAAO6B,QAAQK,KAAKG,gBAQnC,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,+BACE,yBAAKxE,UAAU,WAAf,mFACA,kBAAC,IAAD,CACEa,KAAK,oBACLJ,KAAK,OACLT,UAAU,YACVyD,YAAY,cACZgB,SAAS,GACTN,KAAK,yBACLO,YAAa,CACXC,EAAG,aAEL3D,MAAOuB,EAAOyB,QAAQK,KAAKxD,KAC3BK,SA1LS,SAACC,GACxBmB,EAAc,oBAAqBnB,EAAES,OAAOZ,MAAM4D,gBA0LpCjB,OAAQvB,IAEV,6BACG6B,IAAI9B,EAAQ,sBACX8B,IAAI5B,EAAS,sBACX,0BAAMrC,UAAU,SACbmC,EAAO6B,QAAQK,KAAKxD,WASzC,QACE,OACE,kBAAC,WAAD,KACE,qHACA,kBAAC,IAAD,KACE,kBAAC,IAAD,KACGgC,EAAgBF,OAASJ,EAAOsC,YApQ7ChC,EAAgBF,KAAKA,KAAKmC,KAAI,SAACC,GAAD,OAC5B,yBAAKC,IAAKD,EAAKE,GAAIjF,UAAWC,IAAO4E,aACnC,uBAAG7E,UAAWC,IAAOiF,OAClBH,EAAKI,YAAL,cAAuBJ,EAAKI,WAAWD,MAAvC,SAEH,yBAAKlF,UAAWC,IAAOmF,QACpBL,EAAKI,YAAcJ,EAAKI,WAAWC,QAClC,kBAAC,WAAD,KACE,kEACCL,EAAKI,WAAWC,OAAON,KAAI,SAACO,EAAMC,GAAP,OAC1B,0BAAMN,IAAKK,GACRA,EACAC,IAAUP,EAAKI,WAAWC,OAAOG,OAAS,EAAI,KAAO,SAMhE,kBAAC,IAAD,CACE9E,KAAK,UACL+E,QAAS,WACPlD,EAAc,cAAeyC,EAAKE,IAClC3C,EAAc,mBAAoByC,EAAKI,WAAWD,SAJtD,kDAoPY3C,EAAOkD,kBAAoBlD,EAAOsC,YACpC,yBAAK7E,UAAWC,IAAO,kBAAvB,cACOsC,EAAOkD,iBADd,SAEE,kBAAC,IAAD,CACErB,KAAK,QACLoB,QAAS,WACP1C,EAAmB,EAAD,GACbD,EADa,CAEhBF,KAAMM,EACNL,cAEFN,EAAc,cAAe,MAC7BA,EAAc,UAAW,QAT7B,qDAgBF,kBAAC,WAAD,KACE,yBAAKtC,UAAWC,IAAOyF,MAAvB,6LAQR,kBAAC,IAAD,KACE,kBAAC,IAAD,KACGnD,EAAOsC,cAAgBhC,EAAgBD,UACtC,yBAAK5C,UAAWC,IAAOyF,KAAMvF,MAAO,CAAEwF,QAAS,KAEjD,+BACE,yBAAK3F,UAAU,WAAf,gEACA,kBAAC,EAAD,CACE4F,UAAWrD,EAAOsC,cAAgBhC,EAAgBD,SAClD/B,KAAK,UACL4C,cACIlB,EAAOsC,cAAgBhC,EAAgBD,WACzC,+IAEF5B,OACIuB,EAAOsC,aAAgBhC,EAAgBD,SACrCL,EAAOsD,QACP,GAEN9E,aAAcuB,EACd9B,MAAO6B,EAAQwD,SAAW1D,EAAO0D,SAEhChD,EAAgBD,UACjBC,EAAgBD,SAASD,MACzBJ,EAAOsC,YA3REhC,EAAgBD,SAASD,KAAKmD,QACrD,SAACf,GAAD,OAAUxC,EAAOsC,cAAgBE,EAAKgB,cAAclB,YAAYlC,KAAKsC,MAG/CH,KAAI,SAACC,GAAD,OAC1B,kBAACvC,EAAD,CAAQwC,IAAKD,EAAKE,GAAIjE,MAAO+D,EAAKE,IAC/BF,EAAKI,WAAWa,SAwRH,kBAACxD,EAAD,CAAQxB,MAAM,WAsB3BiF,CAAWrG,EAASC,O,0kBC9X7B,IAAMqG,EAAc,CAAC,oIAA4B,8HA0PlCC,EAxPO,WACpB,IAAMC,EAAgB,CACpBvB,YAAa,KACbY,iBAAkB,GAClBI,QAAS,KACTnC,WAAY,GACZE,UAAW,GACXE,SAAU,KACVD,MAAO,GACPK,aAAa,EACbF,QAAS,CACPvD,KAAM,OACN4D,KAAM,CACJC,OAAQ,GACRE,WAAY,GACZ3D,KAAM,MAKNwF,EAAkB,CACtBxG,KAAM,EACNC,WAAY,GAtBY,EAmCM4C,mBAVL,WACzB,IAAM4D,EAAgBlD,KAAKmD,MAAMrD,aAAasD,QAAQ,sBAEtD,OAAIF,GAAiBA,EAAcvG,SAC1B,KAAKsG,GAGP,KAAKA,EAAZ,GAAgCC,GAGOG,IAnCf,mBAmCnB7G,EAnCmB,KAmCToC,EAnCS,OAoCgBU,oBAAS,GApCzB,mBAoCnBgE,EApCmB,KAoCHC,EApCG,KA6C1B5D,qBAAU,WACRG,aAAaC,QAAQ,oBAAqBC,KAAKC,UAAUzD,MACxD,CAACA,IAEJ,IA2CMgH,EAAc,CA3CAC,WAAa9E,MAAM,CACrC8C,YAAagC,WACVC,SAAS,+FACTC,WACHlB,QAASgB,WACNC,SAAS,mFACTC,aAGeF,WAAa9E,MAAM,CACrC2B,WAAYmD,WAAaC,SAAS,6EAClClD,UAAWiD,WAAaC,SAAS,qGACjCjD,MAAOgD,WACJhD,MAAM,sJACNiD,SAAS,yFACZhD,SAAU+C,WACPC,SAAS,oIACTC,WACH/C,QAAS6C,WAAa9E,MAAM,CAC1BtB,KAAMoG,WACHC,SAAS,8HACTC,aAEL7C,YAAa2C,YAAcG,MACzB,EAAC,GACD,mRAIgBH,WAAa9E,MAAM,CACrCiC,QAAS6C,WAAa9E,MAAM,CAC1BsC,KAAMwC,WAAa9E,MAAM,CACvBuC,OAAQuC,WACLI,QAAQ,cAAe,uJACvBH,SAAS,wHACZtC,WAAYqC,WACTI,QAAQ,sBAAuB,kMAC/BH,SAAS,mKACZjG,KAAMgG,WAAaC,SAAS,sNAoBlC,OAbA/D,qBAAU,WACR,IAAMmE,EAAoB9D,KAAKmD,MAC7BrD,aAAasD,QAAQ,sBAGvBI,EAAYhH,EAASC,KAAO,GACzBsH,QADH,KACgBf,EADhB,GACkCc,IAC/BE,MAAK,SAACC,GACLV,EAAgBU,QAGnB,CAACjB,IAGF,6BACE,kBAAC,IAAD,CACEkB,mBAAoB1H,EAASG,SAC7BwH,iBAAkBX,EAAYhH,EAASC,KAAO,GAC9CuG,cACExG,EAASG,SAAWqG,EA3EE,WAC5B,IAAMc,EAAoB9D,KAAKmD,MAC7BrD,aAAasD,QAAQ,sBAEvB,OAAO,KAAKJ,EAAZ,GAA8Bc,GAuEYM,GAEtCd,eAAgBA,EAChBe,eAAa,EACbC,SAAU,SAACnF,EAAD,GAAgC,IAArBoF,EAAoB,EAApBA,cACnB,GAAI/H,EAASC,OAASD,EAASE,WAAY,CACzCkC,EAAY,KAAKpC,EAAN,CAAgBG,UAAU,KACrCmD,aAAa0E,WAAW,qBACxB1E,aAAa0E,WAAW,qBAOpBrF,EAJF2B,YAIE3B,EAHFsC,YAGEtC,EAFFkD,iBARuC,IASpCoC,EAToC,YAUrCtF,EAVqC,kDAYzCuF,QAAQC,IAAIF,GAGdF,GAAc,MAGf,gBACCpF,EADD,EACCA,OACAJ,EAFD,EAECA,OACAE,EAHD,EAGCA,QACAtB,EAJD,EAICA,aACAqB,EALD,EAKCA,WACA4F,EAND,EAMCA,aACAC,EAPD,EAOCA,aACAC,EARD,EAQCA,aACAC,EATD,EASCA,WACAhB,EAVD,EAUCA,QACA7E,EAXD,EAWCA,cACA8F,EAZD,EAYCA,UACAC,EAbD,EAaCA,WACAV,EAdD,EAcCA,cAdD,OAgBC,0BAAM3H,UAAWC,IAAOqI,KAAMZ,SAAUM,GACtC,kBAAC,EAAD,CAAapI,SAAUA,IACvB,kBAAC,EAAD,CACEA,SAAUA,EACVoC,YAAaA,EACbC,YAAa,CACXM,SACAJ,SACApB,eACAqB,aACAC,UACAC,gBACA6E,UACAQ,mBAGJ,kBAAC,IAAD,CACElH,KAAK,OACL8H,QAAQ,gBACRpI,MAAO,CAAEqI,UAAW,SAEpB,kBAAC,IAAD,MACI5I,EAASG,UAAYH,EAASC,KAAO,GACrC,kBAAC,IAAD,CACEG,UAAWC,IAAOwI,KAClBjD,QAAS,WACPxD,EAAY,KAAKpC,EAAN,CAAgBC,KAAMD,EAASC,KAAO,KACjDsI,EAAW,IACXC,EAAU,MAGZ,kBAAC,IAAD,CAAM3H,KAAK,SACX,0BAAMT,UAAWC,IAAOK,MAAxB,oCAIN,kBAAC,IAAD,KACIV,EAASG,UAAYH,EAASE,aAAeF,EAASC,MAsBrDD,EAASG,UACR,kBAAC,WAAD,KACE,4BACEU,KAAK,SACLT,UAAU,0BACV4F,SAAUqC,GAHZ,wEAvBJ,kBAAC,IAAD,CACErC,SAAUhG,EAASE,aAAeF,EAASC,KAC3C2F,QAAS,WACP6C,IAAajB,MAAK,WACZD,IACFnF,EAAY,KACPpC,EADM,CAETC,KAAMD,EAASC,KAAO,KAGxBqI,IACAC,EAAW,IACXC,EAAU,UAKflC,EAAYtG,EAASC,KAAO,GAC7B,kBAAC,IAAD,CAAMY,KAAK,aAiBlBb,EAASG,UACR,kBAAC,IAAD,CAAKU,KAAK,OAAO8H,QAAQ,cACvB,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEvI,UAAU,0BACVwF,QAAS,WACPxD,EAAY,KAAKqE,IACjB8B,EAAW,IACXC,EAAU,MAGZ,0BAAMpI,UAAWC,IAAOK,MAAxB,mGC/OpBiB,IAAOmH,OAAO,MAEd,IAaeC,EAbH,kBACV,kBAAC,IAAD,CAAgBD,OAAQE,KACtB,yBAAK5I,UAAU,OACb,4BAAQA,UAAU,UAAlB,mBACA,8BACE,yBAAKA,UAAU,WACb,kBAAC,EAAD,WCFU6I,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMpC,MAAK,SAACqC,GAClCA,EAAaC,iB,mBEnInBjK,EAAOC,QAAU,CAAC,YAAc,uCAAuC,MAAQ,iCAAiC,OAAS,kCAAkC,iBAAiB,0CAA0C,gBAAgB,yCAAyC,QAAU,mCAAmC,KAAO,gCAAgC,QAAU,qC,mBCA7WD,EAAOC,QAAU,CAAC,KAAO,4BAA4B,KAAO,4BAA4B,KAAO,+B","file":"static/js/main.70b7d5d7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"line\":\"BuyProgress_line__1_gDd\",\"progress\":\"BuyProgress_progress__2r3IF\",\"text\":\"BuyProgress_text__3Mbl1\"};","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './BuyProgress.module.scss';\n\nconst BuyProgress = ({ stepData }) => {\n  const { step, stepsCount, finished } = stepData;\n\n  return (\n    <Fragment>\n      <div className={styles.line}>\n        <div\n          style={{ width: `${(step / stepsCount) * 100}%` }}\n          className={styles.progress}\n        />\n      </div>\n      {!finished && (\n        <div className={styles.text}>{`Шаг ${step} из ${stepsCount}`}.</div>\n      )}\n    </Fragment>\n  );\n};\n\nBuyProgress.propTypes = {\n  stepData: PropTypes.shape({\n    finished: PropTypes.bool,\n    step: PropTypes.number,\n    stepsCount: PropTypes.number,\n  }),\n};\n\nexport default BuyProgress;\n","import * as React from 'react';\nimport { Input } from 'antd';\n\nexport interface Props {\n  error: string;\n  type?: string;\n  props?: object;\n}\n\nconst InputForm: React.FC<Props> = ({\n  error,\n  type,\n  ...props\n}: Props): React.ReactElement => (\n  <React.Fragment>\n    <Input type={type} {...props} />\n    {error && <span className=\"error\">{error}</span>}\n  </React.Fragment>\n);\n\nInputForm.defaultProps = {\n  type: 'text',\n};\n\nexport default InputForm;\n","import * as React from 'react';\nimport { Select } from 'antd';\n\nexport interface Props {\n  name: string;\n  error: string;\n  handleChange: (name: string, e: string) => void;\n  value: string;\n  children: React.ReactNode | Array<React.ReactNode>;\n  props: object;\n}\n\nconst SelectForm: React.FC<Props> = ({\n  error,\n  name,\n  children,\n  handleChange,\n  value,\n  ...props\n}: Props): React.ReactElement => {\n  return (\n    <React.Fragment>\n      <Select\n        value={value || undefined}\n        onChange={(e: string) => handleChange(name, e)}\n        {...props}\n      >\n        {children}\n      </Select>\n      {error && <span className=\"error\">{error}</span>}\n    </React.Fragment>\n  );\n};\n\nexport default SelectForm;\n","import * as React from 'react';\nimport { DatePicker } from 'antd';\nimport moment, { Moment } from 'moment';\n\ntype currentDateValueType = string | null;\n\nexport interface Props {\n  error: string;\n  handleChange: (arg0: string, arg1: currentDateValueType) => void;\n  name: string;\n  value: Moment | undefined;\n}\n\nconst DatePickerForm: React.FC<Props> = ({\n  error,\n  name,\n  handleChange,\n  value,\n  ...props\n}: Props): React.ReactElement => (\n  <React.Fragment>\n    <DatePicker\n      value={value}\n      onChange={(date) => {\n        const currentDateValue: currentDateValueType = date\n          ? moment(date).format('YYYY.MM.DD')\n          : null;\n        handleChange(name, currentDateValue);\n      }}\n      style={{ width: '100%' }}\n      {...props}\n    />\n    <div>{error && <span className=\"error\">{error}</span>}</div>\n  </React.Fragment>\n);\n\nexport default DatePickerForm;\n","import * as React from 'react';\nimport { Checkbox } from 'antd';\n\nexport interface Props {\n  checked?: boolean;\n  name?: string;\n  label?: string;\n  error?: string;\n  handleChange: (name: string | undefined, e: boolean) => void;\n}\n\nconst CheckboxForm: React.FC<Props> = ({\n  checked,\n  name,\n  label,\n  error,\n  handleChange,\n  ...props\n}: Props): React.ReactElement => {\n  return (\n    <React.Fragment>\n      <Checkbox\n        checked={checked}\n        name={name}\n        {...props}\n        onChange={(e) => handleChange(name, e.target.checked)}\n      >\n        {label}\n      </Checkbox>\n      <div>{error && <span className=\"error\">{error}</span>}</div>\n    </React.Fragment>\n  );\n};\n\nexport default CheckboxForm;\n","import React, { Fragment, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash.get';\nimport moment from 'moment';\nimport { Col, Row, Select, Button } from 'antd';\nimport InputMask from 'react-input-mask';\nimport {\n  CheckboxForm,\n  DatePickerForm,\n  InputForm,\n  SelectForm,\n} from '../formControls';\nimport styles from './BuyTicketFormStep.module.scss';\n\n// data example\nimport performances from '../../json/performances';\nimport sessions from '../../json/sessions';\n\nconst BuyTicketFormStep = ({ stepData, setStepData, formikProps }) => {\n  const {\n    errors,\n    handleChange,\n    handleBlur,\n    touched,\n    setFieldValue,\n    values,\n  } = formikProps;\n\n  const { Option } = Select;\n\n  const [performanceData, setPerformanceData] = useState({\n    data: null,\n    sessions: null,\n  });\n\n  useEffect(() => {\n    setTimeout(() => {\n      setPerformanceData({\n        ...performanceData,\n        data: performances,\n        sessions,\n      });\n    }, 2000);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [performanceData.sessions === null]);\n\n  useEffect(() => {\n    localStorage.setItem('buyTicketFormData', JSON.stringify(values));\n  }, [values]);\n\n  const renderPerformanceData = () =>\n    performanceData.data.data.map((item) => (\n      <div key={item.id} className={styles.performance}>\n        <p className={styles.title}>\n          {item.attributes && `«${item.attributes.title}»`}\n        </p>\n        <div className={styles.genres}>\n          {item.attributes && item.attributes.genres && (\n            <Fragment>\n              <span>Жанры: </span>\n              {item.attributes.genres.map((elem, index) => (\n                <span key={elem}>\n                  {elem}\n                  {index !== item.attributes.genres.length - 1 ? ', ' : ''}\n                </span>\n              ))}\n            </Fragment>\n          )}\n        </div>\n        <Button\n          type=\"primary\"\n          onClick={() => {\n            setFieldValue('performance', item.id);\n            setFieldValue('performanceTitle', item.attributes.title);\n          }}\n        >\n          Выбрать\n        </Button>\n      </div>\n    ));\n\n  const renderSessions = () => {\n    const filteredSessions = performanceData.sessions.data.filter(\n      (item) => values.performance === item.relationships.performance.data.id,\n    );\n\n    return filteredSessions.map((item) => (\n      <Option key={item.id} value={item.id}>\n        {item.attributes.from}\n      </Option>\n    ));\n  };\n\n  const renderStep = (step) => {\n    const handleSelectTypePayment = (value) => {\n      setStepData({\n        ...stepData,\n        stepsCount: value === 'card' ? 3 : 2,\n      });\n\n      setFieldValue('payment.type', value);\n    };\n\n    const handleChangeName = (e) => {\n      setFieldValue('payment.card.name', e.target.value.toUpperCase());\n    };\n\n    const handleChangeNumber = (e) => {\n      setFieldValue('payment.card.number', e.target.value.replace(/\\s/g, ''));\n    };\n\n    switch (step) {\n      case 2:\n        return (\n          <Fragment>\n            <h3>Данные пользователя</h3>\n            <p className=\"required\">Все поля обязательны</p>\n            <Row gutter={20}>\n              <Col xs={24} sm={12}>\n                <label>\n                  <div className=\"caption\">Имя</div>\n                  <InputForm\n                    name=\"first_name\"\n                    placeholder=\"Имя\"\n                    value={values.first_name}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    error={touched.first_name && errors.first_name}\n                  />\n                </label>\n              </Col>\n              <Col xs={24} sm={12}>\n                <label>\n                  <div className=\"caption\">Фамилия</div>\n                  <InputForm\n                    name=\"last_name\"\n                    placeholder=\"Фамилия\"\n                    value={values.last_name}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    error={touched.last_name && errors.last_name}\n                  />\n                </label>\n              </Col>\n            </Row>\n\n            <Row>\n              <Col>\n                <label>\n                  <div className=\"caption\">Почта</div>\n                  <InputForm\n                    type=\"email\"\n                    name=\"email\"\n                    placeholder=\"user@mail.ru\"\n                    value={values.email}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    error={touched.email && errors.email}\n                  />\n                </label>\n              </Col>\n            </Row>\n\n            <Row>\n              <Col>\n                <label>\n                  <div className=\"caption\">Дата рождения</div>\n                  <DatePickerForm\n                    name=\"birthday\"\n                    value={\n                      values.birthday && moment(values.birthday, 'YYYY-MM-DD')\n                    }\n                    style={{ maxWidth: '180px' }}\n                    handleChange={setFieldValue}\n                    error={touched.birthday && errors.birthday}\n                  />\n                </label>\n              </Col>\n            </Row>\n\n            <Row>\n              <Col>\n                <label>\n                  <div className=\"caption\">Способ оплаты</div>\n                  <Select\n                    name=\"payment.type\"\n                    placeholder=\"Выберите способ оплаты\"\n                    value={(values.payment && values.payment.type) || undefined}\n                    onChange={handleSelectTypePayment}\n                  >\n                    <Option value=\"card\">Оплатить картой</Option>\n                    <Option value=\"cash\">На месте</Option>\n                  </Select>\n                  {get(errors, 'payment.type') &&\n                    get(touched, 'payment.type') && (\n                      <span className=\"error\">{errors.payment.type}</span>\n                    )}\n                </label>\n              </Col>\n            </Row>\n\n            <Row>\n              <Col>\n                <CheckboxForm\n                  checked={values.acceptRules}\n                  name=\"acceptRules\"\n                  label=\"Согласен с условиями\"\n                  error={touched.acceptRules && errors.acceptRules}\n                  handleChange={setFieldValue}\n                />\n              </Col>\n            </Row>\n          </Fragment>\n        );\n      case 3:\n        return (\n          <Fragment>\n            <h3>Данные карты</h3>\n            <p className=\"required\">Все поля обязательны</p>\n            <Row>\n              <Col>\n                <label>\n                  <div className=\"caption\">Номер карты</div>\n                  <InputMask\n                    name=\"payment.card.number\"\n                    type=\"text\"\n                    className=\"ant-input\"\n                    placeholder=\"0000 0000 0000 00000\"\n                    mask=\"9999 9999 9999 9999\"\n                    size={20}\n                    value={values.payment.card.number}\n                    onChange={handleChangeNumber}\n                    onBlur={handleBlur}\n                  />\n                </label>\n                <div>\n                  {get(errors, 'payment.card.number') &&\n                    get(touched, 'payment.card.number') && (\n                      <span className=\"error\">\n                        {errors.payment.card.number}\n                      </span>\n                    )}\n                </div>\n              </Col>\n            </Row>\n\n            <Row>\n              <Col>\n                <label>\n                  <div className=\"caption\">Действует до</div>\n                  <InputMask\n                    name=\"payment.card.valid_thru\"\n                    type=\"text\"\n                    className=\"ant-input\"\n                    placeholder=\"00/00\"\n                    mask=\"99/99\"\n                    size={4}\n                    value={values.payment.card.valid_thru}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    style={{ maxWidth: '180px' }}\n                  />\n                  <div>\n                    {get(errors, 'payment.card.valid_thru') &&\n                      get(touched, 'payment.card.valid_thru') && (\n                        <span className=\"error\">\n                          {errors.payment.card.valid_thru}\n                        </span>\n                      )}\n                  </div>\n                </label>\n              </Col>\n            </Row>\n\n            <Row>\n              <Col>\n                <label>\n                  <div className=\"caption\">Владелец карты</div>\n                  <InputMask\n                    name=\"payment.card.name\"\n                    type=\"text\"\n                    className=\"ant-input\"\n                    placeholder=\"IVANOV IVAN\"\n                    maskChar=\"\"\n                    mask=\"AAAAAAAAAAAAAAAAAAAAAA\"\n                    formatChars={{\n                      A: '[A-Za-z ]',\n                    }}\n                    value={values.payment.card.name}\n                    onChange={handleChangeName}\n                    onBlur={handleBlur}\n                  />\n                  <div>\n                    {get(errors, 'payment.card.name') &&\n                      get(touched, 'payment.card.name') && (\n                        <span className=\"error\">\n                          {errors.payment.card.name}\n                        </span>\n                      )}\n                  </div>\n                </label>\n              </Col>\n            </Row>\n          </Fragment>\n        );\n      default:\n        return (\n          <Fragment>\n            <h3>Выбрать событие</h3>\n            <Row>\n              <Col>\n                {performanceData.data && !values.performance ? (\n                  renderPerformanceData()\n                ) : values.performanceTitle && values.performance ? (\n                  <div className={styles['selected-item']}>\n                    {`«${values.performanceTitle}» `}\n                    <Button\n                      size=\"small\"\n                      onClick={() => {\n                        setPerformanceData({\n                          ...performanceData,\n                          data: performances,\n                          sessions,\n                        });\n                        setFieldValue('performance', null);\n                        setFieldValue('session', null);\n                      }}\n                    >\n                      Изменить\n                    </Button>\n                  </div>\n                ) : (\n                  <Fragment>\n                    <div className={styles.load}>\n                      Загружаем подходящие мероприятия\n                    </div>\n                  </Fragment>\n                )}\n              </Col>\n            </Row>\n\n            <Row>\n              <Col>\n                {values.performance && !performanceData.sessions && (\n                  <div className={styles.load} style={{ padding: 0 }} />\n                )}\n                <label>\n                  <div className=\"caption\">Расписание</div>\n                  <SelectForm\n                    disabled={!values.performance || !performanceData.sessions}\n                    name=\"session\"\n                    placeholder={\n                      !(values.performance && !performanceData.sessions) &&\n                      'Выберите подходящее время'\n                    }\n                    value={\n                      !(values.performance && !performanceData.sessions)\n                        ? values.session\n                        : ''\n                    }\n                    handleChange={setFieldValue}\n                    error={touched.session && errors.session}\n                  >\n                    {performanceData.sessions &&\n                    performanceData.sessions.data &&\n                    values.performance ? (\n                      renderSessions()\n                    ) : (\n                      <Option value=\"\" />\n                    )}\n                  </SelectForm>\n                </label>\n              </Col>\n            </Row>\n          </Fragment>\n        );\n    }\n  };\n\n  if (stepData.finished) {\n    return (\n      <Fragment>\n        <div>\n          <h3>Билет успешно куплен.</h3>\n          Спасибо, что любите наш театр. Ждём Вас!\n        </div>\n      </Fragment>\n    );\n  }\n\n  return renderStep(stepData.step);\n};\n\nCheckboxForm.propTypes = {\n  stepData: PropTypes.shape({}),\n  setStepData: PropTypes.shape({}),\n  formikProps: PropTypes.shape({}),\n};\n\nexport default BuyTicketFormStep;\n","import React, { useState, Fragment, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport { Button, Row, Col, Icon } from 'antd';\nimport * as Yup from 'yup';\nimport BuyProgress from '../BuyProgress/BuyProgress';\nimport BuyTicketFormStep from './BuyTicketFormStep';\nimport styles from './BuyTicketForm.module.scss';\n\nconst btnStepText = ['Перейти к покупке билета', 'Заполнить данные карты'];\n\nconst BuyTicketForm = () => {\n  const initialValues = {\n    performance: null,\n    performanceTitle: '',\n    session: null,\n    first_name: '',\n    last_name: '',\n    birthday: null,\n    email: '',\n    acceptRules: false,\n    payment: {\n      type: 'card',\n      card: {\n        number: '',\n        valid_thru: '',\n        name: '',\n      },\n    },\n  };\n\n  const defaultStepData = {\n    step: 1,\n    stepsCount: 3,\n  };\n\n  const getInitialStepData = () => {\n    const localStepData = JSON.parse(localStorage.getItem('buyTicketStepData'));\n\n    if (localStepData && localStepData.finished) {\n      return { ...defaultStepData };\n    }\n\n    return { ...defaultStepData, ...localStepData };\n  };\n\n  const [stepData, setStepData] = useState(getInitialStepData());\n  const [isInitialValid, setInitialValid] = useState(false);\n\n  const getLocalInitialValues = () => {\n    const buyTicketFormData = JSON.parse(\n      localStorage.getItem('buyTicketFormData'),\n    );\n    return { ...initialValues, ...buyTicketFormData };\n  };\n\n  useEffect(() => {\n    localStorage.setItem('buyTicketStepData', JSON.stringify(stepData));\n  }, [stepData]);\n\n  const Step1Schema = Yup.object().shape({\n    performance: Yup.string()\n      .required('Выберите событие')\n      .nullable(),\n    session: Yup.string()\n      .required('Выберите время')\n      .nullable(),\n  });\n\n  const Step2Schema = Yup.object().shape({\n    first_name: Yup.string().required('Заполните имя'),\n    last_name: Yup.string().required('Заполните фамилию'),\n    email: Yup.string()\n      .email('Заполните правильный емейл')\n      .required('Заполните емейл'),\n    birthday: Yup.string()\n      .required('Заполните дату рождения')\n      .nullable(),\n    payment: Yup.object().shape({\n      type: Yup.string()\n        .required('Выберите способ оплаты')\n        .nullable(),\n    }),\n    acceptRules: Yup.boolean().oneOf(\n      [true],\n      'Для совершения покупки необходимо принять правила',\n    ),\n  });\n\n  const Step3Schema = Yup.object().shape({\n    payment: Yup.object().shape({\n      card: Yup.object().shape({\n        number: Yup.string()\n          .matches(/^[0-9]{16}$/, 'Заполните верно номер карты')\n          .required('Заполните номер карты'),\n        valid_thru: Yup.string()\n          .matches(/^[0-9]{2}\\/[0-9]{2}/, 'Заполните верно срок действия карты')\n          .required('Заполните срок действия карты'),\n        name: Yup.string().required('Заполните имя, фамилию владельца карты'),\n      }),\n    }),\n  });\n\n  const schemaArray = [Step1Schema, Step2Schema, Step3Schema];\n\n  useEffect(() => {\n    const buyTicketFormData = JSON.parse(\n      localStorage.getItem('buyTicketFormData'),\n    );\n\n    schemaArray[stepData.step - 1]\n      .isValid({ ...initialValues, ...buyTicketFormData })\n      .then((valid) => {\n        setInitialValid(valid);\n      });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [initialValues]);\n\n  return (\n    <div>\n      <Formik\n        enableReinitialize={stepData.finished}\n        validationSchema={schemaArray[stepData.step - 1]}\n        initialValues={\n          stepData.finished ? initialValues : getLocalInitialValues()\n        }\n        isInitialValid={isInitialValid}\n        initialErrors\n        onSubmit={(values, { setSubmitting }) => {\n          if (stepData.step === stepData.stepsCount) {\n            setStepData({ ...stepData, finished: true });\n            localStorage.removeItem('buyTicketStepData');\n            localStorage.removeItem('buyTicketFormData');\n\n            const {\n              acceptRules,\n              performance,\n              performanceTitle,\n              ...valuesForm\n            } = values;\n\n            console.log(valuesForm);\n          }\n\n          setSubmitting(false);\n        }}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          isSubmitting,\n          validateForm,\n          setTouched,\n          isValid,\n          setFieldValue,\n          setErrors,\n          submitForm,\n          setSubmitting,\n        }) => (\n          <form className={styles.form} onSubmit={handleSubmit}>\n            <BuyProgress stepData={stepData} />\n            <BuyTicketFormStep\n              stepData={stepData}\n              setStepData={setStepData}\n              formikProps={{\n                values,\n                errors,\n                handleChange,\n                handleBlur,\n                touched,\n                setFieldValue,\n                isValid,\n                setSubmitting,\n              }}\n            />\n            <Row\n              type=\"flex\"\n              justify=\"space-between\"\n              style={{ marginTop: '30px' }}\n            >\n              <Col>\n                {!stepData.finished && stepData.step > 1 && (\n                  <Button\n                    className={styles.prev}\n                    onClick={() => {\n                      setStepData({ ...stepData, step: stepData.step - 1 });\n                      setTouched({});\n                      setErrors({});\n                    }}\n                  >\n                    <Icon type=\"left\" />\n                    <span className={styles.text}>Назад</span>\n                  </Button>\n                )}\n              </Col>\n              <Col>\n                {!stepData.finished && stepData.stepsCount !== stepData.step ? (\n                  <Button\n                    disabled={stepData.stepsCount === stepData.step}\n                    onClick={() => {\n                      submitForm().then(() => {\n                        if (isValid) {\n                          setStepData({\n                            ...stepData,\n                            step: stepData.step + 1,\n                          });\n\n                          validateForm();\n                          setTouched({});\n                          setErrors({});\n                        }\n                      });\n                    }}\n                  >\n                    {btnStepText[stepData.step - 1]}\n                    <Icon type=\"right\" />\n                  </Button>\n                ) : (\n                  !stepData.finished && (\n                    <Fragment>\n                      <button\n                        type=\"submit\"\n                        className=\"ant-btn ant-btn-primary\"\n                        disabled={isSubmitting}\n                      >\n                        Купить билет\n                      </button>\n                    </Fragment>\n                  )\n                )}\n              </Col>\n            </Row>\n            {stepData.finished && (\n              <Row type=\"flex\" justify=\"flex-start\">\n                <Col>\n                  <Button\n                    className=\"ant-btn ant-btn-primary\"\n                    onClick={() => {\n                      setStepData({ ...defaultStepData });\n                      setTouched({});\n                      setErrors({});\n                    }}\n                  >\n                    <span className={styles.text}>Купить ещё билет</span>\n                  </Button>\n                </Col>\n              </Row>\n            )}\n          </form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default BuyTicketForm;\n","import React from 'react';\nimport { ConfigProvider } from 'antd';\nimport moment from 'moment';\nimport 'moment/locale/ru';\nimport ruRu from 'antd/es/locale/ru_RU';\nimport BuyTicketForm from './components/BuyTicketForm/BuyTicketForm';\n\nmoment.locale('ru');\n\nconst App = () => (\n  <ConfigProvider locale={ruRu}>\n    <div className=\"App\">\n      <header className=\"header\">Buy Ticket Form</header>\n      <main>\n        <div className=\"wrapper\">\n          <BuyTicketForm />\n        </div>\n      </main>\n    </div>\n  </ConfigProvider>\n);\n\nexport default App;\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './scss/index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"performance\":\"BuyTicketFormStep_performance__3o6oK\",\"title\":\"BuyTicketFormStep_title__2xbQ9\",\"genres\":\"BuyTicketFormStep_genres__307CY\",\"change-section\":\"BuyTicketFormStep_change-section__1n4pn\",\"selected-item\":\"BuyTicketFormStep_selected-item__2yvtL\",\"session\":\"BuyTicketFormStep_session__246MI\",\"load\":\"BuyTicketFormStep_load__1VtlB\",\"loading\":\"BuyTicketFormStep_loading__-ApKY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"BuyTicketForm_form__25sMG\",\"prev\":\"BuyTicketForm_prev__3Rnnp\",\"text\":\"BuyTicketForm_text__18QjL\"};"],"sourceRoot":""}